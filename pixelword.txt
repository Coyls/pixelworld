background(0, 0, 0);
//-------------------------------- LES MONDES -----------------------------------------
var allWorldsBack = [[[[1,0,1,1,1,0,0,1],[1,0,1,1,1,0,0,1],[1,0,0,0,0,0,0,1],[1,1,0,0,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,1],[0,1,1,1,0,0,0,1],[0,1,1,1,1,0,0,1]],[[1,1,1,1,0,1,1,1],[0,1,1,1,0,1,1,1],[0,0,1,1,0,1,0,0],[0,0,1,0,0,0,0,0],[1,1,1,0,0,0,0,0],[1,1,1,0,0,0,0,0],[0,0,0,0,0,0,1,1],[1,1,0,0,1,0,1,1]],[[1,0,0,0,0,1,1,1],[0,0,0,0,0,0,1,1],[0,1,1,0,0,0,0,1],[0,1,1,0,0,0,0,0],[0,0,0,0,0,1,1,1],[0,0,0,0,1,1,1,1],[1,1,1,1,1,1,0,0],[1,1,1,1,1,0,0,0]]],[[[1,1,1,0,0,0,1,1],[1,1,1,0,0,0,1,1],[1,1,1,1,1,0,1,1],[1,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,1],[1,0,1,1,1,0,1,1],[1,0,1,1,1,0,0,1],[1,0,1,1,0,0,0,1]],[[1,1,1,1,0,1,1,1],[1,1,1,1,0,1,1,1],[0,0,1,1,0,0,1,1],[0,0,0,0,0,0,1,1],[0,0,0,0,0,0,0,0],[1,1,0,0,0,0,1,1],[1,1,1,1,0,1,1,1],[1,1,1,1,0,1,1,1]],[[1,0,0,1,1,1,1,1],[1,0,0,0,1,1,1,1],[1,1,1,0,0,1,0,0],[1,1,1,1,0,0,0,0],[1,1,0,1,0,0,0,0],[1,1,0,1,0,0,0,1],[1,1,0,0,0,0,1,1],[1,0,0,0,0,1,1,1]]],[[[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[1,1,1,0,0,1,1,1],[1,1,1,0,0,0,1,1],[0,0,0,0,0,0,1,1],[1,1,0,0,0,1,1,1],[1,1,0,0,1,1,1,1],[1,1,1,0,0,1,1,1]],[[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,0,1],[1,1,1,1,0,0,0,1],[0,0,1,0,0,0,0,1],[0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,1],[1,1,1,0,0,1,1,1]],[[1,1,1,1,1,1,1,1],[1,0,1,1,1,1,1,1],[1,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0],[0,1,1,1,1,0,1,1],[0,0,1,1,0,0,0,0],[0,0,0,1,1,0,0,0],[1,0,0,1,1,1,0,0]]]];
                      
var allWorldsFront = [[[[1,25,22,28,29,5,21,23],// World : 0 0
                        [1,26,24,27,29,5,21,23],
                        [10,0,0,0,0,5,26,27],
                        [10,6,0,5,5,5,0,0],
                        [5,5,5,5,7,5,0,0],
                        [5,5,5,5,5,5,25,28],
                        [25,22,28,29,0,0,21,23],
                        [26,24,27,29,6,0,26,27]],
                      
                       [[9,9,11,11,5,11,9,10],// World : 0 1
                        [2,9,9,11,5,11,15,10],
                        [0,0,9,11,5,11,0,0],
                        [5,0,9,0,5,0,0,0],
                        [9,9,9,0,5,5,5,5],
                        [9,9,6,0,0,5,5,5],
                        [5,0,0,0,0,25,22,28],
                        [10,11,0,0,1,26,24,27]],
                      
                       [[11,0,0,0,5,11,11,11],// World : 0 2
                        [0,0,0,0,5,0,10,10],
                        [0,1,1,5,5,5,0,10],
                        [0,1,14,5,5,5,5,5],
                        [0,5,5,5,5,9,9,9],
                        [0,5,5,5,9,9,9,9],
                        [9,9,9,9,9,9,0,5],
                        [9,9,9,9,9,2,0,0]]
                       
                        ],[
                           
                       [[1,1,10,5,0,0,10,9],// World : 1 0
                        [1,1,10,5,5,5,10,9],
                        [1,10,10,10,10,5,10,9],
                        [1,0,0,0,10,5,0,0],
                        [5,5,5,5,5,5,0,10],
                        [1,25,28,29,10,5,10,10],
                        [1,21,23,29,6,5,25,28],
                        [1,21,23,29,0,5,21,23]],
                      
                       [[9,9,9,9,5,9,9,1],// World : 1 1
                        [9,9,9,9,0,9,9,1],
                        [5,0,1,1,0,0,9,1],
                        [5,0,0,0,0,0,9,1],
                        [5,0,0,0,0,0,0,5],
                        [9,9,4,0,0,2,9,10],
                        [9,9,9,9,0,9,9,10],
                        [9,9,11,11,5,11,9,10]],
                      
                       [[11,5,5,11,11,11,11,11],// World : 1 2
                        [11,0,0,0,11,11,11,11],
                        [11,11,11,0,0,11,0,5],
                        [11,11,11,11,0,0,0,5],
                        [11,12,0,11,0,0,0,5],
                        [11,11,0,11,0,0,0,11],
                        [11,11,0,0,0,0,11,11],
                        [11,0,0,0,5,11,11,11]]
                       
                        ],[
                           
                       [[9,9,9,9,9,9,9,9],// World : 2 0
                        [9,9,9,9,9,9,9,9],
                        [1,1,10,0,0,9,9,9],
                        [1,1,10,0,4,0,9,9],
                        [5,5,5,0,0,0,9,9],
                        [1,1,5,5,0,10,9,9],
                        [1,1,0,5,10,10,9,9],
                        [1,1,10,5,0,10,10,9]],
                      
                       [[9,9,9,9,9,9,9,9],// World : 2 1
                        [9,9,9,9,9,13,0,9],
                        [11,9,9,9,0,0,0,9],
                        [0,0,11,0,0,0,0,9],
                        [0,0,0,10,5,5,5,5],
                        [5,5,5,5,5,0,0,1],
                        [5,5,0,0,5,0,9,1],
                        [9,9,9,0,5,9,9,1]],
                      
                       [[9,9,9,9,9,9,9,9],// World : 2 2
                        [11,0,9,9,9,9,9,9],
                        [11,0,0,0,0,0,0,0],
                        [0,0,0,0,11,0,0,0],
                        [0,11,11,11,11,0,10,11],
                        [0,0,11,11,0,0,0,5],
                        [0,0,0,11,10,0,0,5],
                        [11,5,5,11,11,10,0,0]]]];
//------------------------------------------------------------------------------------------

// Context
var screenWidth = width;
var screenHeight = height;

var iWX = 1;
var iWY = 1;
var gameStart = true;

var fontInventory = createFont("fantasy",40);
var fontTitleStartMenu = createFont("fantasy",60);
var fontTextStartMenu = createFont("fantasy",20);

// Front
var xOrigine = 0;
var yOrigine = 0;
var side = screenWidth / allWorldsBack[iWX][iWY].length;

var roofShift = 61;

// Hero
var hero = [4, 4];
var lastPositionHero = [];

var savePositionHero = function() {
    lastPositionHero = [hero[0],hero[1]];
};
            


// inventory
var inventoryOpen = false;

var keyChest = 0;
var blueGem = 0;
var greenGem = 0;
var heart = 3;
var hasSword = false;

var monsters = [12,13,14,15];

//----------------------------------------------- DrawElement -----------------------------
var drawPath = function(i,j) {
    image(getImage("cute/GrassBlock"),xOrigine+i*(side) ,yOrigine+j*(side) +77 , side, -110);
};
var drawWater = function(i,j) {
    image(getImage("cute/WaterBlock"),xOrigine+i*(side) ,yOrigine+j*(side) +77 , side, -110);
};
var drawBuisson = function(i,j) {
    image(getImage("cute/TreeShort"),xOrigine+i*(side) ,yOrigine+j*(side) -28, side ,78);
};

var drawTree = function(i,j) {
    image(getImage("cute/TreeTall"),xOrigine+i*(side) ,yOrigine+j*(side) -28, side ,78);
};

var drawObstacle = function(i,j) {
    image(getImage("cute/Rock"),xOrigine+i*(side) ,yOrigine+j*(side) -28, side ,78);
};
var drawKey = function(i,j) {
    image(getImage("cute/Key"),xOrigine+i*(side) + 5 ,yOrigine+j*(side) -5 ,39,49 );

};
var drawBlueGem = function(i,j) {
    image(getImage("cute/GemBlue"),xOrigine+i*(side) + 5 ,yOrigine+j*(side) -5 ,39,49 );

};
var drawEnd = function(i,j) {
    image(getImage("cute/DoorTallClosed"),xOrigine+i*(side) ,yOrigine+j*(side) - 21, side, 74);};

var drawHero = function(i,j) {
    image(getImage("cute/CharacterBoy"), side * (hero[0]),side * (hero[1]) - 28,46,85);
};

var drawMonsterRed = function(i,j) {
    image(getImage("avatars/piceratops-ultimate"),xOrigine+i*(side) ,yOrigine+j*(side) - 34,62,85);
};

var drawMonsterGreen = function(i,j) {
    image(getImage("avatars/leafers-ultimate"),xOrigine+i*(side) ,yOrigine+j*(side) - 34,62,85);
};

var drawMonsterYellow = function(i,j) {
    image(getImage("avatars/primosaur-ultimate"),xOrigine+i*(side) ,yOrigine+j*(side) - 34,62,85);
};


var drawMonsterBlue = function(i,j) {
    image(getImage("avatars/aqualine-ultimate"),xOrigine+i*(side) ,yOrigine+j*(side) - 34,62,85);
};

var drawSun = function(i,j) {
    image(getImage("cute/DirtBlock"),xOrigine+i*(side) ,yOrigine+j*(side) -30, side ,102);
};

var drawPnj = function(i,j) {
    image(getImage("cute/CharacterCatGirl"),xOrigine+i*(side) ,yOrigine+j*(side) - 28,46,85);
};
var drawChestClose = function(i,j) {
    image(getImage("cute/ChestClosed"),xOrigine+i*(side) + 5 ,yOrigine+j*(side) -5 ,39,49 );
};
var drawChestOpen = function(i,j) {
    image(getImage("cute/ChestOpen"),xOrigine+i*(side) + 5 ,yOrigine+j*(side) -5 ,39,49 );
};

// house 

var drawRoofLeft = function(i,j) {
    image(getImage("cute/RoofEast"),xOrigine+i*(side) ,yOrigine+j*(side) +roofShift , side, -110);
};
var drawRoofRight = function(i,j) {
    image(getImage("cute/RoofWest"),xOrigine+i*(side) ,yOrigine+j*(side) +roofShift , side, -110);
};
var drawRoofTop = function(i,j) {
    image(getImage("cute/RoofNorth"),xOrigine+i*(side) ,yOrigine+j*(side) +roofShift , side, -110);
};
var drawRoofBot = function(i,j) {
    image(getImage("cute/RoofSouth"),xOrigine+i*(side) ,yOrigine+j*(side) +roofShift , side, -110);
};
var drawRoofCornerLT = function(i,j) {
    image(getImage("cute/RoofNorthWest"),xOrigine+i*(side) ,yOrigine+j*(side) +roofShift , side, -110);
};
var drawRoofCornerRT = function(i,j) {
    image(getImage("cute/RoofNorthEast"),xOrigine+i*(side) ,yOrigine+j*(side) +roofShift , side, -110);
};
var drawRoofCornerRB = function(i,j) {
    image(getImage("cute/RoofSouthEast"),xOrigine+i*(side) ,yOrigine+j*(side) +roofShift , side, -110);
};
var drawRoofCornerLB = function(i,j) {
    image(getImage("cute/RoofSouthWest"),xOrigine+i*(side) ,yOrigine+j*(side) +roofShift , side, -110);
};
var drawWall = function(i,j) {
    image(getImage("cute/WallBlockTall"),xOrigine+i*(side) ,yOrigine+j*(side) +51 , side, -83);
};


// --------------------------------------- overlay ---------------------------
var drawHeart = function() {
    rect(0,0, 132, 50);
    fill(0, 0, 0, 170);
    noStroke();
    for (var i = 0; i < heart; i++) {
        image(getImage("cute/Heart"),14 + i * 36 ,1, 25, 40);
    }


};

var drawInventory = function() {
    var iW = 60;
    var iH = 90;
    var oX = 70;
    var oY = 40;
    
    var dx = 80;
    var dy = 35;
    
    textFont(fontInventory);
    fill(0, 0, 0, 175);
    stroke(255, 255, 255);
    strokeWeight(5);
    rect(side, side, 300, 300, 30);
    fill(255, 255, 255);
    image(getImage("cute/GemBlue"),oX,oY,iW,iH);
    text(":  " + blueGem, iW + dx, iH + dy);
    image(getImage("cute/Key"),oX,oY + dx,iW,iH);
    text(":  " + keyChest, iW + dx, iH + dy*3);
    image(getImage("cute/GemGreen"),oX,oY + dx * 2,iW,iH);
    text(":  " + greenGem, iW + dx, iH + dy*5);
};

var drawPnjText = function() {
    var iW = 60;
    var iH = 90;
    var oX = 80;
    var oY = 81;
    
    var dx = 88;
    var dy = 35;
    
     
    fill(0, 0, 0, 175);
    stroke(255, 255, 255);
    strokeWeight(5);
    rect(side, side, 300, 198, 30);
    fill(255, 255, 255);
    textFont(fontTextStartMenu);
    text("Mysterious seller...", 67,86);
    image(getImage("cute/GemGreen"),oX,oY,iW,iH);
    textFont(fontInventory);
    text("= 3 x", oX + dx,oY + dy *2);
    image(getImage("cute/GemBlue"),oX + dx *2 ,oY,iW,iH);
    textFont(fontTextStartMenu);
    text("press     b     to buy", 126,205);
};


var drawStartMenu = function() {
    fill(0, 0, 0);
    rect(0, 0, width, height);
    fill(255, 255, 255);
    textFont(fontTitleStartMenu);
    text("Pixelworld", 70,150);
    textFont(fontTextStartMenu);
    text("Press espace to start", 123,214);
    textFont(fontTextStartMenu);
    text("z,q,s,d = to move", 140,287);
    text("i = inventory", 150,318);
    text("e = interaction", 141,346);
};

var drawChestText = function() {
    var oX = 80;
    var oY = 66;
    var iW = -36;
    var iH = 88;
    
    var dx = -65;
    var dy = 67;
    
    fill(0, 0, 0, 175);
    stroke(255, 255, 255);
    strokeWeight(5);
    rect(iW + oX, iH + oY, 300, 43, 30);
    fill(255, 255, 255);
    textFont(fontTextStartMenu);
    text("I need a key to open this chest !",side + oX + dx, side + oY + dy);
};



// ----------------------------------- DrawWorld ---------------------------------------
var drawWorld = function() {
for (var j=0;j<allWorldsFront[iWX][iWY].length;j++){
    for (var i=0;i<allWorldsFront[iWX][iWY][j].length;i++){
        // path
        drawPath(i,j);
        // Obstacle
        if (allWorldsFront[iWX][iWY][i][j] === 1) {
        drawObstacle(i,j);
        }
        // key
        if (allWorldsFront[iWX][iWY][i][j] === 2) {
        drawKey(i,j);
        }
        // door
        if (allWorldsFront[iWX][iWY][i][j] === 3) {
        drawEnd(i,j);
        }
        // blueGem
        if (allWorldsFront[iWX][iWY][i][j] === 4) {
        drawBlueGem(i,j);
        }
        // sun
        if (allWorldsFront[iWX][iWY][i][j] === 5) {
        drawSun(i,j);
        }
        // pnj
        if (allWorldsFront[iWX][iWY][i][j] === 6) {
        drawPnj(i,j);
        }
        // chestClose 
        if (allWorldsFront[iWX][iWY][i][j] === 7) {
        drawChestClose(i,j);
        }
        // chestOpen 
        if (allWorldsFront[iWX][iWY][i][j] === 8) {
        drawChestOpen(i,j);
        }
        // water
        if (allWorldsFront[iWX][iWY][i][j] === 9) {
        drawWater(i,j);
        }
        // buisson
        if (allWorldsFront[iWX][iWY][i][j] === 10) {
        drawBuisson(i,j);
        }
        // tree
        if (allWorldsFront[iWX][iWY][i][j] === 11) {
        drawTree(i,j);
        }
        // monsterRed
        if (allWorldsFront[iWX][iWY][i][j] === 12) {
        drawMonsterRed(i,j);
        }
        // monsterBlue
        if (allWorldsFront[iWX][iWY][i][j] === 13) {
        drawMonsterBlue(i,j);
        }
        // drawMonsterYellow
        if (allWorldsFront[iWX][iWY][i][j] === 14) {
        drawMonsterYellow(i,j);
        }
        // drawMonsterGreen
        if (allWorldsFront[iWX][iWY][i][j] === 15) {
        drawMonsterGreen(i,j);
        }
        // Draw Wall
        if (allWorldsFront[iWX][iWY][i][j] === 29) {
        drawWall(i,j);
        }
        
    }

}

};

var drawHouse = function() {
for (var j=0;j<allWorldsFront[iWX][iWY].length;j++){
    for (var i=0;i<allWorldsFront[iWX][iWY][j].length;i++){
        
        

        // Top
        if (allWorldsFront[iWX][iWY][i][j] === 21) {
        drawRoofTop(i,j);
        }
        // Right
        if (allWorldsFront[iWX][iWY][i][j] === 22) {
        drawRoofRight(i,j);
        }
        // Bot
        if (allWorldsFront[iWX][iWY][i][j] === 23) {
        drawRoofBot(i,j);
        }
        // Left
        if (allWorldsFront[iWX][iWY][i][j] === 24) {
        drawRoofLeft(i,j);
        }
        //
        //
        //
        
        // Corner Top
        if (allWorldsFront[iWX][iWY][i][j] === 25) {
        drawRoofCornerLT(i,j);
        }
        // Corner Right
        if (allWorldsFront[iWX][iWY][i][j] === 26) {
        drawRoofCornerRT(i,j);
        }
        // Corner Bot
        if (allWorldsFront[iWX][iWY][i][j] === 27) {
        drawRoofCornerRB(i,j);
        }
        // Corner Left
        if (allWorldsFront[iWX][iWY][i][j] === 28) {
        drawRoofCornerLB(i,j);
        }
        
        
        
        
    }

}

};

// ---------------------------------- drawOverlay ----------------------------------------

var drawOverlay = function() {
    // heart
    drawHeart();
    // inventory
    if (inventoryOpen === true) {
       drawInventory(); 
    }
    // startMenu
    if (gameStart === true) {
        drawStartMenu();
    }
    // pnjText
    if (allWorldsFront[iWX][iWY][hero[0]][hero[1]-1] === 6) {
        drawPnjText();    
    }
    // chestText 
    if (allWorldsFront[iWX][iWY][hero[0]][hero[1]-1] === 7) {
        drawChestText();    
    }
};
// ----------------------------------------- fightMonster ----------------------------------
var looseHeart = function() {
    hero = lastPositionHero;
    heart--;
};

var fightMonster = function() {
    for (var i=0; i < monsters.length; i++ ){
        if (allWorldsFront[iWX][iWY][hero[0]][hero[1]-1] === monsters[i] || allWorldsFront[iWX][iWY][hero[0]][hero[1]+1] === monsters[i] || allWorldsFront[iWX][iWY][hero[0]+1][hero[1]] === monsters[i] || allWorldsFront[iWX][iWY][hero[0]-1][hero[1]] === monsters[i]) {
            looseHeart();
        }
        
            // cree un if si jai une arme  et reparer le bug en x
            
        
    }
    

};

// ------------------- function onGround ----------------------------------------------
var onGroundKey = function () {
    keyChest++;
    allWorldsFront[iWX][iWY][hero[0]][hero[1]] = 0;
};

var onGroundblueGem = function () {
    blueGem++;
    allWorldsFront[iWX][iWY][hero[0]][hero[1]] = 0;
};

// ------------------- function check-ground ----------------------------------------------

var checkGround = function () {
    if (allWorldsFront[iWX][iWY][hero[0]][hero[1]] === 2){
        onGroundKey();
    }
    if (allWorldsFront[iWX][iWY][hero[0]][hero[1]] === 4){
        onGroundblueGem();
    }
};
// ------------------------------------------ Change World -------------------------------
var changeWorld = function () {
    if (allWorldsFront[iWX][iWY][hero[0]][hero[1]] === 5){
        if (hero[1] === 0){
            iWY++;
            hero = [hero[0],6];
        }
        if (hero[1] === 7){
            iWY--;
            hero = [hero[0],1];
        }
        if (hero[0] === 0){
            iWX++;
            hero = [6,hero[1]];
        }
        if (hero[0] === 7){
            iWX--;
            hero = [1,hero[1]];
        }
    }
};
//--------------------------------------- keyPressed --------------------------------------
keyPressed = function() {
    if (key.toString() === 'z') {
        if ((allWorldsBack[iWX][iWY][hero[0]][hero[1]-1] !== 1) && (hero[1] !== 0)) {
            savePositionHero();
            hero[1] = hero[1]-1;
        }
        
    }
    if (key.toString() === 'q') {
        if (allWorldsBack[iWX][iWY][hero[0]-1][hero[1]] !== 1) {
            savePositionHero();
            hero[0] = hero[0]-1;
        }
        
    }
    if (key.toString() === 's') {
        if ((allWorldsBack[iWX][iWY][hero[0]][hero[1]+1] !== 1) && (hero[1] !== allWorldsBack[iWX][iWY].length -1)){
            savePositionHero();
            hero[1] = hero[1]+1;
        }
        
    }
    if (key.toString() === 'd') {
        if (allWorldsBack[iWX][iWY][hero[0]+1][hero[1]] !== 1) {
            savePositionHero();
            hero[0] = hero[0]+1;
        }
    }
    if (key.toString() === 'i') {
        if (inventoryOpen) {
            inventoryOpen = false;
        } else {
            inventoryOpen = true;
        }
    }
    if (key.toString() === ' ') {
        gameStart = false;
    }
    if (key.toString() === 'b') {
        if (allWorldsFront[iWX][iWY][hero[0]][hero[1]-1] === 6 && blueGem > 2) {
            blueGem = blueGem - 3;
            greenGem++;
        }
        
    }
    // interaction
    if (key.toString() === 'e') {
        if (allWorldsFront[iWX][iWY][hero[0]][hero[1]-1] === 7 && keyChest > 0) {
            allWorldsFront[iWX][iWY][hero[0]][hero[1]-1] = 8;
            blueGem = blueGem + 5;
            keyChest--;
        }
    }
    
    
};
//-------------------------------- Gestion des touches -------------------------------------



// GENERATE world
var draw = function() {
    drawWorld();
    drawHero();
    drawHouse();
    checkGround();
    drawOverlay();
    changeWorld();
    fightMonster();
    
    
    text(hero, 304, 25);
    text(iWX, 366, 25);
    text(iWY, 383,25);
    
    //text(allWorldsFront[iWX][iWY][hero[0]][hero[1]-1], 112 ,89);

};

//-------------------------------------------- code utile a conserver
// var randomObstacle = floor(random(0, obstacle.length));
// world Elements
// var obstacle = ["cute/Rock","cute/TreeShort","cute/TreeTall","cute/TreeUgly"];
// image(getImage("cute/TreeTall")


